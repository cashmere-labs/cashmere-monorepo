on:
    push:
        branches:
            - main
            - staging

# cancel previous runs on the same PR
concurrency:
    group: ${{ github.ref }}
    cancel-in-progress: true

name: 🚀 Deploy

env:
    CI: true

permissions:
    id-token: write # This is required for requesting the JWT
    contents: read # This is required for actions/checkout

defaults:
    run:
        shell: bash

jobs:
    deploy-to-env:
        name: 🚀 Deploy
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v3
              with:
                  ref: ${{ github.event.pull_request.head.sha }}
                  # We need to fetch all branches and commits so that Nx affected has a base to compare against.
                  fetch-depth: 0
            - uses: nrwl/nx-set-shas@v3
            - uses: pnpm/action-setup@v2.2.3

            - name: '🔧 Setup environment'
              run: |
                  if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
                    echo "STAGE=prod" >> $GITHUB_ENV
                  elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
                    echo "STAGE=dev" >> $GITHUB_ENV
                  fi

            - name: '🔨 Setup Node.js'
              id: setup-node
              uses: actions/setup-node@v3
              with:
                  node-version-file: '.nvmrc'
                  cache: 'pnpm'

            - name: '🔨 Install dependencies'
              run: pnpm install --frozen-lockfile

            - name: '💄 Check lint'
              run: pnpm run lint:check

            - name: '💄 Check format'
              run: pnpm format:check

            - name: '👥 Configure AWS Credentials'
              uses: aws-actions/configure-aws-credentials@v2
              with:
                  role-to-assume: arn:aws:iam::748733882600:role/github_test_runner
                  role-session-name: github_test_runner
                  aws-region: us-east-1

            - name: '🏗 Package'
              run: pnpm run build

            - name: '🚀 Deploy'
              run: pnpm sst deploy --stage $STAGE
