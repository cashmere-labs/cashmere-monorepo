on:
    pull_request:
        types: [opened, synchronize, reopened]

# cancel previous runs on the same PR
concurrency:
    group: ${{ github.ref }}
    cancel-in-progress: true

name: ⛷ PR tests

env:
    CI: true

defaults:
    run:
        shell: bash

permissions:
    id-token: write # This is required for requesting the JWT
    contents: read # This is required for actions/checkout

jobs:
    build-and-test:
        name: 🏗 Build Project & 🧪 Run Tests
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v3
              with:
                  ref: ${{ github.event.pull_request.head.sha }}
                  # We need to fetch all branches and commits so that Nx affected has a base to compare against.
                  fetch-depth: 0
            - uses: nrwl/nx-set-shas@v3
            - uses: pnpm/action-setup@v2.2.3
            - name: '👥 Configure AWS Credentials'
              uses: aws-actions/configure-aws-credentials@v2
              with:
                  role-to-assume: arn:aws:iam::748733882600:role/github_test_runner
                  role-session-name: github_test_runner
                  aws-region: us-east-1
            - name: Setup Node.js
              id: setup-node
              uses: actions/setup-node@v3
              with:
                  node-version-file: '.nvmrc'
                  cache: 'pnpm'
            - name: Install dependencies
              run: pnpm install --frozen-lockfile
            - name: 💾 Cache Nx cache
              id: package-cache
              uses: actions/cache@v3
              with:
                  path: |
                      nx-cache
                  # Cache will be updated at every run: https://github.com/actions/cache/blob/main/workarounds.md#update-a-cache
                  key: ${{ runner.os }}-nx-cache-${{ steps.setup-node.outputs.node-version }}-${{ github.run_id }}
                  restore-keys: |
                      ${{ runner.os }}-nx-cache-${{ steps.setup-node.outputs.node-version }}-
                      ${{ runner.os }}-nx-cache-
            - name: '🏗 Package'
              run: pnpm run build
            - name: '💄 Check lint'
              run: pnpm run lint:check
            - name: '💄 Check format'
              run: pnpm format:check
            - name: '🚀 Deploy to AWS'
              id: aws_deploy
              run: pnpm run deploy:pr
            - name: '🧪 Run tests'
              run: pnpm nx run-many --target=test --all --parallel=2
            - name: '🔥 Remove from AWS'
              if: steps.aws_deploy.outcome == 'success'
              run: pnpm remove
